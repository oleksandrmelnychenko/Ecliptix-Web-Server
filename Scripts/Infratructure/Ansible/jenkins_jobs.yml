- hosts: jenkins
  become: true
  vars:
    github_private_key: "{{ lookup('file', env_vars.GITHUB_SSH_KEY_PATH) }}"
  tasks:
    - name: Create GitHub pipeline job via Groovy
      community.general.jenkins_script:
        url: "{{ env_vars.JENKINS_URL }}"
        user: "{{ env_vars.JENKINS_USER }}"
        password: "{{ env_vars.JENKINS_PASS }}"
        script: |
          import jenkins.model.*
          import hudson.model.*
          import hudson.triggers.SCMTrigger
          import hudson.plugins.git.*
          import hudson.plugins.git.extensions.impl.CleanCheckout
          
          def jenkins = Jenkins.instance
          def jobName = "memberships-pipeline"
          def gitRepo = "git@github.com:oleksandrmelnychenko/Ecliptix-Web-Server.git"
          def credentialsId = "github-ssh-key"
          def jenkinsfilePath = "Jenkinsfile"
          
          def job = jenkins.getItem(jobName)
          if (job == null) {
            job = new org.jenkinsci.plugins.workflow.job.WorkflowJob(jenkins, jobName)
            jenkins.add(job, jobName)
          }
          
          def userRemoteConfig = new UserRemoteConfig(gitRepo, null, null, credentialsId)
          def gitSCM = new GitSCM(
            [userRemoteConfig],
            [new BranchSpec("*/main")],
            false,
            Collections.<SubmoduleConfig>emptyList(),
            null,
            null,
            [new CleanCheckout()]
          )
          
          def flowDef = new org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition(gitSCM, jenkinsfilePath)
          flowDef.lightweight = true
          job.setDefinition(flowDef)
          
          def trigger = new SCMTrigger("") // пустий cron, бо через webhook
          job.addTrigger(trigger)
          trigger.start(job, true)
          
          job.save()

<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net9.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <AssemblyName>Ecliptix.Security.Certificate.Pinning</AssemblyName>
        <RootNamespace>Ecliptix.Security.Certificate.Pinning</RootNamespace>
        <!-- Remove conditional PlatformTarget to allow cross-platform builds -->
        <!-- <PlatformTarget Condition="$([MSBuild]::IsOSPlatform('OSX'))">arm64</PlatformTarget> -->
        <!-- <PlatformTarget Condition="$([MSBuild]::IsOSPlatform('Windows'))">x64</PlatformTarget> -->
    </PropertyGroup>


    <!-- Native SSL server library - Runtime-specific -->
    <ItemGroup>
        <!-- macOS ARM64 library -->
        <Content Include="NativeLibraries\macos\libcertificate.pinning.server.dylib" Condition="'$(RuntimeIdentifier)' == 'osx-arm64' OR ('$(RuntimeIdentifier)' == '' AND $([MSBuild]::IsOSPlatform('OSX')))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>libcertificate.pinning.server.dylib</TargetPath>
        </Content>

        <!-- Linux x64 library -->
        <Content Include="NativeLibraries\linux\libcertificate.pinning.server.so" Condition="'$(RuntimeIdentifier)' == 'linux-x64' OR ('$(RuntimeIdentifier)' == '' AND $([MSBuild]::IsOSPlatform('Linux')))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>libcertificate.pinning.server.so</TargetPath>
        </Content>

        <!-- Windows x64 library -->
        <Content Include="NativeLibraries\windows\libcertificate.pinning.server.dll" Condition="'$(RuntimeIdentifier)' == 'win-x64' OR ('$(RuntimeIdentifier)' == '' AND $([MSBuild]::IsOSPlatform('Windows')))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>libcertificate.pinning.server.dll</TargetPath>
        </Content>

        <Content Include="NativeLibraries\dependencies\libcrypto-3-x64.dll"
                 Condition="('$(RuntimeIdentifier)' == 'win-x64' OR ('$(RuntimeIdentifier)' == '' AND $([MSBuild]::IsOSPlatform('Windows')))) AND Exists('NativeLibraries\windows\libcertificate.pinning.server.dll')">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>libcrypto-3-x64.dll</TargetPath>
        </Content>
    </ItemGroup>

    <!-- Runtime-specific native assets for deployment -->
    <ItemGroup>
        <None Include="NativeLibraries\macos\libcertificate.pinning.server.dylib">
            <Pack>true</Pack>
            <PackagePath>runtimes/osx-arm64/native/libcertificate.pinning.server.dylib</PackagePath>
        </None>
        <None Include="NativeLibraries\linux\libcertificate.pinning.server.so">
            <Pack>true</Pack>
            <PackagePath>runtimes/linux-x64/native/libcertificate.pinning.server.so</PackagePath>
        </None>
        <None Include="NativeLibraries\windows\libcertificate.pinning.server.dll">
            <Pack>true</Pack>
            <PackagePath>runtimes/win-x64/native/libcertificate.pinning.server.dll</PackagePath>
        </None>
    </ItemGroup>

    <!-- Custom target to copy the correct native library based on runtime -->
    <Target Name="CopyNativeLibraryForRuntime" BeforeTargets="Build" Condition="'$(RuntimeIdentifier)' != ''">
        <ItemGroup>
            <!-- Remove all previous Content items for native libraries -->
            <Content Remove="NativeLibraries\macos\libcertificate.pinning.server.dylib" />
            <Content Remove="NativeLibraries\linux\libcertificate.pinning.server.so" />
            <Content Remove="NativeLibraries\windows\libcertificate.pinning.server.dll" />
        </ItemGroup>

        <ItemGroup Condition="'$(RuntimeIdentifier)' == 'win-x64'">
            <Content Include="NativeLibraries\windows\libcertificate.pinning.server.dll">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
                <TargetPath>libcertificate.pinning.server.dll</TargetPath>
            </Content>
        </ItemGroup>

        <ItemGroup Condition="'$(RuntimeIdentifier)' == 'linux-x64'">
            <Content Include="NativeLibraries\linux\libcertificate.pinning.server.so">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
                <TargetPath>libcertificate.pinning.server.so</TargetPath>
            </Content>
        </ItemGroup>

        <ItemGroup Condition="'$(RuntimeIdentifier)' == 'osx-arm64'">
            <Content Include="NativeLibraries\macos\libcertificate.pinning.server.dylib">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
                <TargetPath>libcertificate.pinning.server.dylib</TargetPath>
            </Content>
        </ItemGroup>
    </Target>

    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="9.0.10" />
        <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="9.0.10" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Ecliptix.Domain\Ecliptix.Domain.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="NativeLibraries\" />
    </ItemGroup>

</Project>
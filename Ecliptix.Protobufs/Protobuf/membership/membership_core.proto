syntax = "proto3";

package ecliptix.proto.membership;
option csharp_namespace = "Ecliptix.Protobuf.Membership";

message Membership {
  bytes unique_identifier = 1;

  enum ActivityStatus {
    ACTIVE = 0;
    INACTIVE = 1;
  }

  enum CreationStatus {
    OTP_VERIFIED = 0;
    SECURE_KEY_SET = 1;
    PASSPHRASE_SET = 2;
  }

  ActivityStatus status = 3;
  optional CreationStatus creation_status = 4;
  optional bytes account_unique_identifier = 5;
}

enum MobileAvailabilityStatus {
  AVAILABLE = 0;
  INCOMPLETE_REGISTRATION = 1;
  TAKEN_ACTIVE = 2;
  TAKEN_INACTIVE = 3;
  DATA_CORRUPTION = 4;
  REGISTRATION_EXPIRED = 5;
}

message MobileNumberAvailabilityResponse {
  MobileAvailabilityStatus status = 1;
  bool can_register = 2;
  bool can_continue = 3;
  optional bytes existing_membership_id = 4;
  optional bytes registered_device_id = 5;
  optional Membership.CreationStatus creation_status = 6;
  optional Membership.ActivityStatus activity_status = 7;
  string localization_key = 8;
  optional bytes account_unique_identifier = 9;
}

enum LogoutScope {
  THIS_DEVICE = 0;
  ALL_DEVICES = 1;
}

message LogoutRequest {
  bytes membership_identifier = 1;
  string logout_reason = 2;
  int64 timestamp = 3;
  bytes hmac_proof = 4;
  LogoutScope scope = 5;
  optional bytes account_identifier = 6;
  optional bytes device_identifier = 7;
}

message LogoutResponse {
  enum Result {
    SUCCEEDED = 0;
    ALREADY_LOGGED_OUT = 1;
    SESSION_NOT_FOUND = 2;
    FAILED = 3;
    INVALID_TIMESTAMP = 4;
    INVALID_HMAC = 5;
  }
  Result result = 1;
  int64 server_timestamp = 2;
  bytes revocation_proof = 3;
}

message AnonymousLogoutRequest {
  bytes membership_identifier = 1;
  string logout_reason = 2;
  int64 timestamp = 3;
  bytes hmac_proof = 4;
  LogoutScope scope = 5;
  optional bytes account_identifier = 6;
}

message AnonymousLogoutResponse {
  enum Result {
    SUCCEEDED = 0;
    ALREADY_LOGGED_OUT = 1;
    SESSION_NOT_FOUND = 2;
    INVALID_TIMESTAMP = 3;
    INVALID_HMAC = 4;
    TIMESTAMP_TOO_OLD = 5;
    FAILED = 6;
  }
  Result result = 1;
  int64 server_timestamp = 2;
  optional string message = 3;
}

message LogoutHistoryRecord {
  bytes membership_identifier = 1;
  optional bytes account_identifier = 2;
  optional bytes device_identifier = 3;
  string logout_reason = 4;
  int64 logged_out_at = 5;
  optional string ip_address = 6;
  optional string platform = 7;
}

message GetLogoutHistoryRequest {
  bytes membership_identifier = 1;
  int32 limit = 2;
}

message GetLogoutHistoryResponse {
  enum Result {
    SUCCEEDED = 0;
    UNAUTHORIZED = 1;
    FAILED = 2;
  }
  Result result = 1;
  repeated LogoutHistoryRecord logout_records = 2;
  optional string message = 3;
}